#summary Hier wird die Aufteilung des Projekts in einzelne Pakete beschrieben
#labels Phase-Design

= Aufteilung in Pakete (ToDo's) =

Als Client-Server Anwendung können einmal drei grundsätzliche Pakete festgemacht werden:
  * *Client* - Code der nur von den Clients verwendet wird
  * *Server* - Code der nur von den Server verwendet wird 
  * *Commons* - Code der von beiden verwendet wird.

Die drei Hauptpakete befinden sich im Package:
*at.technikum.sam.remote.alcatraz*

== Details ==

Um die Arbeit aufzuteilen werden die Paket weiter zerlegt in folgende Pakte und Klassen:

 * *Commons*
   * _#DONE#_ Projekt Setup 
   * _#DONE#_ Interfaces
   * _#DONE#_ PlayerAdapter Klasse
   * Utility Klasse Grundgerüst (evtl. Logging für Debugging Zwecke)
   * Ressources, Strings, Statics
   

  * *Client*
   * ClientImpl Grundgerüst (RMI Managment, Startup, Shutdown, Main)
   * Client Methode reportNewMaster(...)
   * Client Methode isAlive()
   * Client Methode startGame(...)
   * Client Methode youtTurn()
   * Client Methode doMove(...)
   * Integration Client-Server Registrierungsablauf (abhängig von ServerImpl)


  * *Server*
   * _#Jürgen#_ ServerImpl Grundgerüst (RMI, Spread, Startup, etc...)
   * _#DONE#_ RegistryState Klasse (um den Server-State in eine Spread Message verpacken zu können)
   * Spread Group Opening?
   * _#DONE#_ Server Methode createPlayer(...)
   * _#DONE#_ Server Methode register(...) & unregister(...)
   * Spielstart
    * _#DONE#_ Server Methode forceStart()
    * _#DONE#_ 4 Spieler Autostart
    * _#DONE#_ generische private Startmethode
   * _#Christian#_ IAdvancedListener Implementierung
    * Server Synchronisation
    * Master Failure Detection & ELection
    * Join/Leave Group
   * _#Jürgen#_ Spread Messages versenden (synchronize Game)
   * _#Stefan#_ Spielerregistrierung umbauen
    * createPlayer() und register() zu neuer Methode register() zusammenfassen (createPlayer() fliegt raus)
    * neue register Signatur: public void register(PlayerAdapter player)
    * PlayerAdapter enthält nur mehr IClient Referenz und Playernamen als String, kein Player Objekt mehr
    * register macht:
     * prüfung ob Playernamen bereits vergeben?
     * prüfung ob IClient bereits in der Liste (nur unter anderem Namen)?
     * PlayerAdapter zur Liste hinzufügen
     * Abschluss mit synchronizeGame() um Game an Spread Gruppe zu verschicken




 

 